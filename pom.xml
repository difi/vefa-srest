<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>no.difi.ringo</groupId>
    <artifactId>ringo</artifactId>
    <version>1.1.30-SNAPSHOT</version>

    <url>https://github.com/difi/vefa-srest</url>

    <packaging>pom</packaging>

    <name>Ringo - Project root</name>

    <scm>
        <connection>scm:git:git@github.com:difi/vefa-srest.git</connection>
        <url>scm:git:git@github.com:difi/vefa-srest.git</url>
        <developerConnection>scm:git:git@github.com:difi/vefa-srest.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <slf4j.version>1.7.24</slf4j.version>
        <jersey.version>1.19.2</jersey.version>
        <guice.version>4.1.0</guice.version>
        <jetty.version>7.6.16.v20140903</jetty.version>
        <oxalis.version>4.0.2</oxalis.version>
        
        <vefa.peppol.groupId>no.difi.vefa</vefa.peppol.groupId>
        <vefa.peppol.version>1.0.4</vefa.peppol.version>
        <logback.version>1.2.1</logback.version>
    </properties>

    <modules>
        <module>api</module>
        <module>client</module>
        <module>ringo-domain</module>
        <module>ringo-email-impl</module>
        <module>ringo-persistence-jdbc-impl</module>
        <module>ringo-security</module>
        <module>ringo-standalone</module>
        <module>ringo-tomcat-realm</module>
        <module>ringo-usecase</module>
        <module>server</module>
        <module>ringo-distribution</module>
        <module>ringo-test</module>
    </modules>

    <dependencyManagement>

        <!-- defines versions all default scope for all dependencies used in all Ringo modules -->

        <dependencies>
            <dependency>
                <groupId>no.difi.vefa</groupId>
                <artifactId>commons-bdxr</artifactId>
                <version>0.9.1</version>
            </dependency>

            <!-- Oxalis -->
            <dependency>
                <groupId>no.difi.oxalis</groupId>
                <artifactId>oxalis-api</artifactId>
                <version>${oxalis.version}</version>
            </dependency>

            <dependency>
                <groupId>no.difi.oxalis</groupId>
                <artifactId>oxalis-outbound</artifactId>
                <version>${oxalis.version}</version>
            </dependency>

            <dependency>
                <groupId>no.difi.oxalis</groupId>
                <artifactId>oxalis-test-impl</artifactId>
                <version>${oxalis.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-server</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-servlet</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- standard jee javax.inject annotations (for non jee applications) -->
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>1</version>
            </dependency>

            <!-- Guice -->
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${guice.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>21.0</version>
            </dependency>


            <dependency>
                <groupId>com.google.inject.extensions</groupId>
                <artifactId>guice-servlet</artifactId>
                <version>${guice.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.inject.extensions</groupId>
                <artifactId>guice-assistedinject</artifactId>
                <version>${guice.version}</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
                <scope>compile</scope>
            </dependency>

            <!-- java util logging bridge for slf4j -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- Jersey REST and JSON upgrade to Jersey 2.x needs Servlet 3.x container and removal of jersey-guice.
                 Consider to refactor REST to to simple JAX-RS servlets instead, w/o implementation dependencies -->
            <dependency>
                <groupId>com.sun.jersey</groupId>
                <artifactId>jersey-servlet</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <!-- only used in no.sr.ringo.resource.OutboxResource because of multipart form data post -->
                <groupId>com.sun.jersey.contribs</groupId>
                <artifactId>jersey-multipart</artifactId>
                <version>${jersey.version}</version>
            </dependency>

            <dependency>
                <groupId>com.sun.jersey.contribs</groupId>
                <artifactId>jersey-guice</artifactId>
                <version>${jersey.version}</version>
            </dependency>


            <dependency>
                <groupId>org.json</groupId>
                <artifactId>json</artifactId>
                <version>20080701</version>
            </dependency>

            <!-- java servlets api -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.1.0</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>jstl</groupId>
                <artifactId>jstl</artifactId>
                <version>1.2</version>
            </dependency>

            <!-- ISO8601 Support -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>2.0</version>
            </dependency>

            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>1.3.1</version>
            </dependency>
            
            <!-- Command line tools -->
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>1.1</version>
            </dependency>

            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.6</version>
            </dependency>

            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.1.1</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.0.1</version>
            </dependency>

            <!-- XML -->
            <dependency>
                <groupId>org.jdom</groupId>
                <artifactId>jdom</artifactId>
                <version>1.1</version>
            </dependency>

            <dependency>
                <groupId>jaxen</groupId>
                <artifactId>jaxen</artifactId>
                <version>1.1.1</version>
            </dependency>

            <dependency>
                <groupId>xerces</groupId>
                <artifactId>xercesImpl</artifactId>
                <version>2.10.0</version>
            </dependency>

            <dependency>
                <groupId>xml-apis</groupId>
                <artifactId>xml-apis</artifactId>
                <!-- This version is required when using old DIFI validator and xerces 2.10.0 -->
                <version>1.4.01</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>4.5.3</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpmime</artifactId>
                <version>4.5.3</version>
            </dependency>

            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>1.4.193</version>
            </dependency>


            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-dbcp2</artifactId>
                <version>2.1.1</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.1</version>
            </dependency>

            <dependency>
                <!-- consider removing apache commons libs that have built-in variants, codec is
                     only used for Base64 (Hex) from ringo-security and tomcat-realm-tests modules.
                     Java 8 has java.util.Base64 as standard functionality -->
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.10</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>1.1.1</version>
            </dependency>

            <!-- test dependencies -->

            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>6.9.10</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>3.4</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.eclipse.jetty.aggregate</groupId>
                <artifactId>jetty-all</artifactId>
                <version>${jetty.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jsp-2.1-glassfish</artifactId>
                <version>2.1.v20100127</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>com.sun.jersey</groupId>
                <artifactId>jersey-client</artifactId>
                <version>${jersey.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>${vefa.peppol.groupId}</groupId>
                <artifactId>peppol-sbdh</artifactId>
                <version>${vefa.peppol.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>no.difi.vefa</groupId>
                        <artifactId>peppol-common</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            
            <dependency>
                <groupId>${vefa.peppol.groupId}</groupId>
                <artifactId>peppol-common</artifactId>
                <version>${vefa.peppol.version}</version>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <dependencies>

        <!-- these dependencies are activated for every module, see dependencyManagement for versions -->

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- logging frameworks -->

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <scope>provided</scope>
        </dependency>


    </dependencies>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.6.0</version>
                    <inherited>true</inherited>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.4.1</version>
                    <executions>
                        <execution>
                            <id>enforce-java</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireJavaVersion>
                                        <version>[1.8.0,)</version>
                                    </requireJavaVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.19.1</version>
                    <configuration>
                        <!-- maven-surefire-plugin runs unit tests, triggered by mvn test -->

                        <excludedGroups>external,broken</excludedGroups>
                        <!--<excludedGroups>integration,persistence</excludedGroups>-->
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.19.1</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!-- maven-failsafe-plugin runs just integration tests, triggered by mvn verify -->
                        <excludedGroups>external,broken</excludedGroups>
                        <includes>
                            <!-- include all test files, not only those named by the *IT*.java pattern -->
                            <include>**/*.java</include>
                        </includes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                    
                </plugin>

                <!-- Note! The version 3.0.0 is very slow when building certain types of projects -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>

            <!-- these plugins are activated for every module, see pluginManagement for versions -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <additionalparam>-Xdoclint:none</additionalparam>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>

        <!-- Until further notice, there is no public binary repository, so we simply -->
        <!-- copy the artifacts into a local directory -->
        <repository>
            <id>localfs</id>
            <url>file://${user.home}/.m2/distro</url>
        </repository>
    </distributionManagement>

<!--
    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>
-->

</project>
